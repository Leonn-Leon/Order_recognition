import base64
import json
import xml.etree.ElementTree as ET
import html
from bs4 import BeautifulSoup
from order_recognition.utils.data_text_processing import Data_text_processing

# Функция для парсинга XML и извлечения HTML-содержимого
def html_from_xml(xml_data):
    # Парсинг XML
    root = ET.fromstring(xml_data)
    # Нахождение элемента fileContent и декодирование HTML-содержимого
    html_content = html.unescape(root.find('.//fileContent').text)
    return html_content

# Функция для преобразования HTML в текст
def convert_html_to_text(html_content):
    soup = BeautifulSoup(html_content, features="html.parser")
    return soup.get_text('\n').replace('\r', ' ')

def xml_from_hash(hash):
    content = base64.standard_b64decode(base64.standard_b64decode(hash)).decode('utf-8')
    return content
def text_from_hash(hash):
    content = xml_from_hash(hash)
    try:
        html_content = html_from_xml(content)
    except:
        html_content = json.loads(content)["fileContent"]
    # print(html_content)
    text = convert_html_to_text(html_content)
    text = Data_text_processing().clean_email_content(text)
    return text

if __name__ == '__main__':
    hash = "ZXlKaWRXTnJaWFJPWVcxbElqb2lZM0p0TFdWdFlXbHNJaXdpYjJKcVpXTjBUbUZ0WlNJNkltMXpaMTgxWXpKak5UWTBORFF4TVdNd01EWXhOamt6TURFNVlXUTNaR1JsTW1VMVpTSXNJbVpwYkdWRGIyNTBaVzUwSWpvaTBKZlF0TkdBMExEUXN0R0IwWUxRc3RHRDBMblJndEMxTEZ4eVhHNWNjbHh1MEpyUXN0Q3cwTFRSZ05DdzBZSWdOakFnMFlIUmdqTWdOdENjSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ050QzhYSEpjYnRDYTBZRFJnOUN6SURFeUlOR0IwWUl1TVRBdE1qQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTnpMUXZGeHlYRzdRbXRHQTBZUFFzeUF5TUNEUmdkR0NNOUMvMFlFMUw5R0IwTDgxSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBek50QzhYSEpjYnRDYTBZRFJnOUN6SURJMUxkQ1NJTkdCMFlJejBML1JnVFV2MFlIUXZ6VWcwSlBRbnRDaDBLSWdNalU1TUMwNE9DQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRMUXZGeHlYRzdRbXRHQTBZUFFzeUF6TmlEUmdkR0NNOUMvMFlFdjBZSFF2eUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBMjBMeGNjbHh1MEpyUmdOR0QwTE1nTmpBZzBZSFJnaTR5TUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0EyMEx4Y2NseHUwSnZRdU5HQjBZSWdNVEFnMFlIUmdqUFF2OUdCTlMvUmdkQy9OU0RSZ05DKzBMelFzU0RRa2kzUW1pRFFrOUNlMEtIUW9pQTROVFk0TFRjM0lDQWdJQ0FnSURFdU5kR0ZNeTQxMEx4Y2NseHUwSnZRdU5HQjBZSWdNVFFnMFlIUmdqUFF2OUdCTlMvUmdkQy9OU0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVM0MTBZVTJJREhSaU5HQ1hISmNidENiMExqUmdkR0NJRElnMFlIUmdpNHowTC9SZ1RVdjBZSFF2elVnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFdU1qWFJoVEl1TlNBeTBZalJnbHh5WEc3UW05QzQwWUhSZ2lBMElOR0IwWUl6MEwvUmdUVXYwWUhRdnpVZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhMalhSaFRZZ005R0kwWUpjY2x4dTBLTFJnTkdEMExIUXNDQXhNRGpSaFRFd0lOR0IwWUl1TURuUWt6TFFvU0RRazlDZTBLSFFvaUF6TWpVeU9DMHlNREV6SUNBZ0lDQWdJQ0FnSURYUXZGeHlYRzVjY2x4dTBLTFJnTkdEMExIUXNDQXhNelBSaFRZZzBLSFJnaTR6MFlIUXZ6VWcwSlBRbnRDaDBLSWdPRGN6TWkwM09DQWdJQ0FnSUNBZ0lDQWdJQ0FnSURJdU5kQzhYSEpjYnRDaTBZRFJnOUN4MExBZ01UVTUwWVV4TWlEUW9kR0NMalBSZ2RDL05TRFFrOUNlMEtIUW9pQTROek15TFRjNElDQWdJQ0FnSUNBZ0lDQWdJQ0F6MEx4Y2NseHUwS0xSZ05HRDBMSFFzQ0F5TVRuUmhUZ2cwWUhSZ2k0d09kQ1RNdENoSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F5Tk5DOFhISmNibHh5WEc3UW90R0EwWVBRc2RDd0lESTNNOUdGT0NEUmdkR0NMakl3SU5DVDBKN1FvZENpSURnM016SXROemdnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNOUM4WEhKY2J0Q2kwWURSZzlDeDBMQWdNekkxMFlVeE1DRFJnZEdDTGpBNTBMTXkwWUVnMEpQUW50Q2gwS0lnT0Rjek1pMDNPQ0FnSUNBZ0lDQWdJQ0FnSURUUXZGeHlYRzdRb3RHQTBZUFFzZEN3SURjMjBZVTBMalVnMFlIUmdpNHlNQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F5MEx4Y2NseHUwS0xSZ05HRDBMSFFzQ0E0TWpEUmhURXdJTkdCMFlJdU1EblFzekxSZ1NEUWs5Q2UwS0hRb2lBeE1EY3dOaTAzTmlBZ0lDQWdJQ0FnSUNBZ050QzhYSEpjYnRDaTBZRFJnOUN4MExBZ09EblJoVFVnMFlIUmdpNHlNQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFeTBMeGNjbHh1MEtQUXM5QyswTHZRdnRDNklERXdNTkdGTVRBdzBZVXhNQ0RSZ2RHQ005Qy8wWUUxTDlHQjBMODFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNVGpRdkZ4eVhHN1FvOUN6MEw3UXU5QyswTG9nTWpEUmhUSXcwWVUwSU5HQjBZSXpJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREV5MEx4Y2NseHUwS1BRczlDKzBMdlF2dEM2SURNdzBZVXpNTkdGTXlEUmdkR0NNOUMvMFlFeklOQ1QwSjdRb2RDaUlEZzFNRGt0T1RNZ0lDQWdJQ0FnSUNBZ0lDQTIwTHhjY2x4dTBLUFFzOUMrMEx2UXZ0QzZJRFExMFlVME5kR0ZNeURSZ2RHQ005Qy8wWUUxTDlHQjBMODFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRMUXZGeHlYRzdRbzlDejBMN1F1OUMrMExvZ05EWFJoVFExMFlVMElOR0IwWUl6MEwvUmdUVXYwWUhRdnpVZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTIwTHhjY2x4dTBLUFFzOUMrMEx2UXZ0QzZJRFExMFlVME5kR0ZOU0RSZ2RHQ005Qy8wWUUxTDlHQjBMODFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTnRDOFhISmNidENqMExQUXZ0QzcwTDdRdWlBMU1OR0ZOVERSaFRNZzBZSFJnalBRdjlHQk5TL1JnZEMvTlNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lESTAwTHhjY2x4dTBLUFFzOUMrMEx2UXZ0QzZJRFV3MFlVMU1OR0ZOU0RSZ2RHQ005Qy8wWUUxTDlHQjBMODFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTWpUUXZGeHlYRzdRbzlDejBMN1F1OUMrMExvZ05qUFJoVFl6MFlVMUlOR0IwWUl6MEwvUmdUVXYwWUhRdnpVZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhNdEM4WEhKY2J0Q2owTFBRdnRDNzBMN1F1aUEzTU5HRk56RFJoVGNnMFlIUmdqUFF2OUdCTlMvUmdkQy9OU0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURVMDBMeGNjbHh1MEtQUXM5QyswTHZRdnRDNklEa3cwWVU1TU5HRk5pRFJnZEdDTTlDLzBZRTFMOUdCMEw4MUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNVExRdkZ4eVhHN1FxTkN5MExYUXU5QzcwTFhSZ0NBeE1OQy9JTkdCMFlJejBML1JnVFV2MFlIUXZ6VWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeE10QzhYSEpjYnRDbzBMTFF0ZEM3MEx2UXRkR0FJREV5MFlNZzBZSFJnalBRdjlHQk5TL1JnZEMvTlNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREV5MEx4Y2NseHUwS2pRc3RDMTBMdlF1OUMxMFlBZ01UYlJneURSZ2RHQ005Qy8wWUUxTDlHQjBMODFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTUwWWpSZ2lEUXY5QytJREV5MEx4Y2NseHUwS2pRc3RDMTBMdlF1OUMxMFlBZ01qVFJneUF4TXRDOElOR0IwWUl6MEwvUmdUVXYwWUhRdnpVZ0lDQWdJQ0FnSUNBZ0lDQWdNOUdJMFlJZzBML1F2aUF4TXRDOFhISmNidENvMExMUXRkQzcwTHZRdGRHQUlETXcwWU1nMFlIUmdqUFF2OUdCTlMvUmdkQy9OU0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERXkwTHhjY2x4dTBLalFzdEMxMEx2UXU5QzEwWUFnTmk0MTBMOGcwWUhSZ2pQUXY5R0JOUy9SZ2RDL05TQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRMUXZGeHlYRzdRcU5DeTBMWFF1OUM3MExYUmdDQTJMalhSZ3lEUmdkR0NNOUMvMFlFMUw5R0IwTDgxSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXlOTkM4WEhKY2J0Q28wTFhSZ2RHQzBMalFzOUdBMExEUXZkQzkwTGpRdWlBeE55RFJnZEdDTGpFd0xUSXdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURJMDBMeGNjbHh1WEhKY2J0Q2hJTkdEMExMUXNOQzIwTFhRdmRDNDBMWFF2Q3hjY2x4dVhISmNidENhMEw3UmdOQyswWUxRdXRDKzBMSWcwSjNRdU5DNjBMN1F1OUN3MExrdVhISmNiajA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYnRDZTBKN1FuaUJjSXRDWTBMM1F0dEMxMEwzUXRkR0EwTDNRc05HUElOQ2EwTDdRdk5DLzBMRFF2ZEM0MFk4Z1hDTFFvOUM5MExqUXY5R0EwTDdRdkZ3aVhISmNiajA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYSEpjYnRDYzBMN1FzUzRnMFlMUXRkQzdMaUFyTnpreE1qWXpNRGM1TVRKY2NseHVQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNjbHh1VTJ0NWNHVWdjMnQ1YTI5eWIzUnJiM1pjY2x4dVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2NseHUwS0hRc05DNTBZSWdWVzVwY0hKdmJTNXdjbTljY2x4dVhISmNiaUo5"
    # hash = "ZXlKaWRXTnJaWFJPWVcxbElqb2lZM0p0TFdWdFlXbHNJaXdpYjJKcVpXTjBUbUZ0WlNJNkltMXpaMTloTlRnNU1tRXdNbUkyTWpFNE5HTXhZV0UzTkdaaE1ETmxPV0psWldRMU5TSXNJbVpwYkdWRGIyNTBaVzUwSWpvaVhHNDhTRlJOVEQ0OFFrOUVXVDQ4Y0NCemRIbHNaVDFjSW0xaGNtZHBiaTEwYjNBNklEQndlRHRjSWlCa2FYSTlYQ0pzZEhKY0lqN1FvZEdIMExqUmd0Q3cwTFhRdkNEUmdkQzgwTFhSZ3RHRElOQzkwTEFnMEw3UXNkR0swTFhRdXRHQ0lESXdNalVnMExQUXZ0QzAwTEF1UEZ3dmNENWNianh3SUdScGNqMWNJbXgwY2x3aVB0Q2YwWURRdnRHSTBZTWcwTExSaTlHQjBZTFFzTkN5MExqUmd0R01JTkdCMFlmUXRkR0NMQ0RRdjlDMjBMc2dPanhjTDNBK1hHNDhjQ0JrYVhJOVhDSnNkSEpjSWo0eExpRFFvdEdBMFlQUXNkQ3dJTkMvMFlEUXZ0R0VJREUwTUNveE5EQXFOQ0JjZFRJd01UTWdNVElnMEx3dTBMOHVJTkNkMEw0ZzBMTFJpOUdCMFlMUXNOQ3kwTHZSajlDNUlOQ3lJTkdDMEw3UXZkQzkwTERSaFM0ZzBKelF2ZEMxSU5HQzBMRFF1aURRdjlDKzBMM1JqOUdDMEwzUXRkQzVJTkN4MFlQUXROQzEwWUl1UEZ3dmNENWNianh3SUdScGNqMWNJbXgwY2x3aVBqSXVJTkNvMExMUXRkQzcwTFhSZ0NBeU1DQmNkVEl3TVRNZ056SWcwTHd1MEw4dUlOQy8wTDRnTmlEUXZOQzEwWUxSZ05DKzBMSWcwTC9RdU5DNzBMWFF2ZEdMMExrdVBGd3ZjRDVjYmp4d0lHUnBjajFjSW14MGNsd2lQak11SU5DajBMUFF2dEM3MEw3UXVpQTNOU28xSUZ4MU1qQXhNeUF4TURnZzBMd3UwTDh1SU5DLzBMNGdOaURRdkNEUXY5QzQwTHZRdGRDOTBZdlF1UzQ4WW5JK1BHSnlQanhjTDNBK1hHNDhaR2wySUdsa1BWd2liV0ZwYkMxaGNIQXRZWFYwYnkxa1pXWmhkV3gwTFhOcFoyNWhkSFZ5WlZ3aVBseHVJRHh3SUdScGNqMWNJbXgwY2x3aVBpMHRQR0p5UGx4dUlDQWcwSjdSZ3RDLzBZRFFzTkN5MEx2UXRkQzkwTDRnMExqUXR5QThZU0JvY21WbVBWd2lhSFIwY0hNNkx5OXRZV2xzTG5KMUwxd2lQazFoYVd3OFhDOWhQaURRdE5DNzBZOGdRVzVrY205cFpEeGNMM0ErWEc0OFhDOWthWFkrUEZ3dlFrOUVXVDQ4WEM5SVZFMU1QbHh1SW4wPQ=="
    text = text_from_hash(hash)
    # print(text)
